{"version":3,"sources":["components/App.js","index.js"],"names":["resolve","givenFormula","formula","replace","eval","App","props","state","result","handleInteraction","bind","handleButtonPress","handleKeyPress","componentDidMount","key","this","setState","fresh_result","toFixed","new_formula","includes","event","target","id","toUpperCase","document","addEventListener","DisplayComponent","ButtonsContainer","onClick","Component","variant","operations","0","1","2","3","4","ButtonsRow","className","Object","keys","row","map","i","k","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.37170450.chunk.js","sourcesContent":["// React\nimport React, { Component } from 'react';\n\n// CSS\nimport './App.css';\n\n// bootstrap\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\n// eval wrapper\nfunction resolve(givenFormula) {\n  let formula = givenFormula.replace(\"✕\", \"*\").replace(\"÷\", \"/\");\n  return (eval(formula));\n}\n\n// Main App Component\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      formula: '',\n      result: '0.0000',\n    };\n    this.handleInteraction = this.handleInteraction.bind(this);\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n  handleInteraction(key) {\n    switch(key) {\n      case \"C\":\n        this.setState({ \n          formula: '',\n          result: '0.0000',\n        });\n        break;\n      case \"=\":\n        let fresh_result = resolve(this.state.formula);\n        this.setState({ \n          formula: '',\n          result: fresh_result.toFixed(4),\n        });\n        break;\n      default:\n        let new_formula = this.state.formula;\n\n        if (['✕','÷','+','-'].includes(key)){\n          // if first operator after result\n          if (new_formula === \"\") new_formula = this.state.result;\n\n          new_formula += \" \" + key + \" \";\n        } else {\n          new_formula += key;\n        }\n\n        this.setState({ \n          formula: new_formula,\n        });\n        break;\n    }\n  }\n  handleButtonPress(event){\n    let key = event.target.id;\n    this.handleInteraction(key);\n  }\n  // TO DO: fix key interactions\n  handleKeyPress(event){\n    let key = event.key.toUpperCase().replace('ENTER','=').replace('*','✕').replace('/','÷');\n    let calculator_keys = ['(',')','C','7','8','9','÷','4','5','6','✕','1','2','3','-','0','.','=','+'];\n    if (calculator_keys.includes(key)) {\n      this.handleInteraction(key);\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  render() {\n    return (\n    <div id=\"App\">\n      <div></div>\n      <div id=\"calculator\">\n        <DisplayComponent formula={this.state.formula} result={this.state.result}/>\n        <ButtonsContainer onClick={this.handleButtonPress} />\n      </div>\n      <footer>\n        <p>\t&#169; 2021, camila.</p>\n      </footer>\n    </div>\n    );\n  }\n}\n\n// Display\nconst DisplayComponent = props => {\n  return (\n      <div id=\"display\">\n          <Alert variant=\"secondary\" id=\"displayAlert\">\n            <p id=\"p-formula\">{props.formula}</p>\n            <p id=\"p-result\">{props.result}</p>\n          </Alert>\n      </div>\n  );\n};\n\n// operation buttons + size\nconst operations = {\n  0:{'(':'info',')':'info','C':'danger',},\n  1:{'7':'light','8':'light','9':'light','÷':'info',},\n  2:{'4':'light','5':'light','6':'light','✕':'info',},\n  3:{'1':'light','2':'light','3':'light','-':'info',},\n  4:{'0':'light','.':'light','=':'success','+':'info',},\n}\n\n// Buttons\nconst ButtonsRow = props => {\n  return (\n      <div className=\"buttons-row-container\" id=\"row-{props.row}\">\n        { \n          Object.keys(operations[props.row]).map(\n            ([i])=> \n              <Button \n                variant={operations[props.row][i]} \n                onClick={props.onClick}\n                id={i}\n                key={i}\n                className={ i===\"C\" ? 'big-button' : 'normal-button'} \n              >{i}</Button>\n          )\n        }\n      </div>\n  );\n};\n\nconst ButtonsContainer = props => {\n  return (\n      <div id=\"buttons-container\">\n        { \n          Object.keys(operations).map(\n            ([k])=> \n              <ButtonsRow row={k} onClick={props.onClick}/>\n          )\n        }\n      </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}